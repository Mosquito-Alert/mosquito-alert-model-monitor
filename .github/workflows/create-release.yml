name: Create Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.

permissions:
  contents: write  # Required to create releases

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for changelog generation
    
    - name: Get tag info
      id: tag_info
      run: |
        echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        echo "is_prerelease=$(echo ${GITHUB_REF#refs/tags/} | grep -E '(alpha|beta|rc)' && echo true || echo false)" >> $GITHUB_OUTPUT
    
    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        
        # Generate changelog
        if [ -n "$PREVIOUS_TAG" ]; then
          echo "## 🚀 What's Changed" > changelog.md
          echo "" >> changelog.md
          git log --pretty=format:"- %s" $PREVIOUS_TAG..HEAD >> changelog.md
          echo "" >> changelog.md
          echo "" >> changelog.md
          echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/$PREVIOUS_TAG...${{ steps.tag_info.outputs.tag_name }}" >> changelog.md
        else
          echo "## 🚀 Initial Release" > changelog.md
          echo "" >> changelog.md
          echo "This is the first release of the Mosquito Alert Model Monitor dashboard system." >> changelog.md
          echo "" >> changelog.md
          echo "### 🎯 Key Features" >> changelog.md
          echo "- Real-time job monitoring dashboard" >> changelog.md
          echo "- Integration scripts designed to minimize impact on critical jobs" >> changelog.md
          echo "- SLURM cluster support with resource management" >> changelog.md
          echo "- GitHub Actions automated deployment" >> changelog.md
          echo "- Comprehensive documentation and setup guides" >> changelog.md
          echo "" >> changelog.md
          echo "### 📊 Dashboard Pages" >> changelog.md
          echo "- **Main Dashboard**: Job status and resource monitoring" >> changelog.md
          echo "- **History**: Performance trends and analytics" >> changelog.md
          echo "- **Alerts**: Notification management" >> changelog.md
          echo "- **Logs**: Log analysis and debugging" >> changelog.md
          echo "" >> changelog.md
          echo "### 🛡️ Robustness Features" >> changelog.md
          echo "- Scripts designed to handle errors gracefully" >> changelog.md
          echo "- Retry logic and error handling for git operations" >> changelog.md
          echo "- Drop-in replacement approach for existing projects" >> changelog.md
          echo "" >> changelog.md
          echo "### 📖 Documentation" >> changelog.md
          echo "- [Live Dashboard](https://mosquito-alert.github.io/mosquito-alert-model-monitor/)" >> changelog.md
          echo "- [Robustness Guide](https://mosquito-alert.github.io/mosquito-alert-model-monitor/ROBUSTNESS_GUIDE.html)" >> changelog.md
          echo "- [SLURM Setup](https://mosquito-alert.github.io/mosquito-alert-model-monitor/SLURM_SETUP.html)" >> changelog.md
          echo "- [Integration API](https://mosquito-alert.github.io/mosquito-alert-model-monitor/MACHINE_INTEGRATION_SPEC.html)" >> changelog.md
        fi
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag_info.outputs.tag_name }}
        name: Release ${{ steps.tag_info.outputs.tag_name }}
        body_path: changelog.md
        draft: false
        prerelease: ${{ steps.tag_info.outputs.is_prerelease }}
        generate_release_notes: true  # GitHub's automatic release notes
        files: |
          environment.yml
          ROBUSTNESS_GUIDE.md
          SLURM_SETUP.md
          MACHINE_INTEGRATION_SPEC.md
          scripts/update_job_status.sh
          scripts/slurm_dashboard_sync.sh
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Update latest release badge
      if: steps.tag_info.outputs.is_prerelease == 'false'
      run: |
        echo "✅ Release ${{ steps.tag_info.outputs.tag_name }} created successfully!"
        echo "🔗 View release: https://github.com/${{ github.repository }}/releases/tag/${{ steps.tag_info.outputs.tag_name }}"
        echo "📊 Live Dashboard: https://mosquito-alert.github.io/mosquito-alert-model-monitor/"
