---
title: "Mosquito Alert Model Monitor"
format:
  html:
    theme: cosmo
    css: styles.css
    toc: true
execute:
  echo: false
  warning: false
  message: false
---

```{r setup}
library(DT)
library(jsonlite)
library(dplyr)

# Simple function to load status files
load_status_files <- function() {
  status_files <- list.files("data/status", pattern = "*.json", full.names = TRUE)
  
  if (length(status_files) == 0) {
    return(data.frame())
  }
  
  # Read each file and combine
  all_data <- data.frame()
  for (file in status_files) {
    tryCatch({
      data <- jsonlite::fromJSON(file, flatten = TRUE)
      
      # Safely extract fields
      job_name <- if(!is.null(data$job_name)) data$job_name else basename(file)
      status <- if(!is.null(data$status)) data$status else "unknown"
      last_updated <- if(!is.null(data$last_updated)) data$last_updated else ""
      
      all_data <- rbind(all_data, data.frame(
        job_name = job_name,
        status = status,
        last_updated = last_updated,
        stringsAsFactors = FALSE
      ))
    }, error = function(e) {
      message("Error reading file: ", file, " - ", e$message)
    })
  }
  
  return(all_data)
}
```

# üìä **System Status**

## üéØ **Current Jobs** 

```{r simple-status}
jobs_data <- load_status_files()

if (nrow(jobs_data) > 0) {
  # Simple table with only trusted fields
  simple_status <- jobs_data %>%
    arrange(desc(last_updated)) %>%
    mutate(
      Status = case_when(
        status == "running" ~ "üîÑ Running",
        status == "completed" ~ "‚úÖ Completed", 
        status == "failed" ~ "‚ùå Failed",
        TRUE ~ paste("‚ö†Ô∏è", status)
      )
    ) %>%
    select(
      Job = job_name,
      Status,
      `Last Updated (Raw)` = last_updated
    )
  
  datatable(
    simple_status,
    options = list(
      pageLength = 15,
      dom = 't'
    ),
    rownames = FALSE,
    class = "table table-striped"
  )
} else {
  cat("**No jobs found.**")
}
```

## üìÅ **Log Files**

Recent log files linked to GitHub repository:

```{r log-links}
# List recent log files from both projects
mosquito_logs <- list.files("../mosquito_model_data_prep/logs", pattern = "\\.out$", full.names = FALSE)
weather_logs <- list.files("../weather-data-collector-spain/logs", pattern = "\\.out$", full.names = FALSE)

if (length(mosquito_logs) > 0) {
  cat("**Mosquito Model Data Prep Logs:**\n\n")
  for (log in head(mosquito_logs, 10)) {
    github_url <- paste0("https://github.com/Mosquito-Alert/mosquito_model_data_prep/blob/main/logs/", log)
    cat(paste0("- [", log, "](", github_url, ")\n"))
  }
  cat("\n")
}

if (length(weather_logs) > 0) {
  cat("**Weather Data Collector Logs:**\n\n")
  for (log in head(weather_logs, 10)) {
    github_url <- paste0("https://github.com/Mosquito-Alert/weather-data-collector-spain/blob/main/logs/", log)
    cat(paste0("- [", log, "](", github_url, ")\n"))
  }
}

if (length(mosquito_logs) == 0 && length(weather_logs) == 0) {
  cat("No log files found in connected projects.")
}
```

## üìÅ **Data Files**

**Status Files Available:**

```{r file-list}
status_files <- list.files("data/status", pattern = "*.json", full.names = FALSE)
if (length(status_files) > 0) {
  for(file in status_files) {
    cat(paste0("- ", file, "\n"))
  }
} else {
  cat("No status files found.")
}
```

---

**This dashboard shows only verified, unprocessed data to ensure reliability.**
